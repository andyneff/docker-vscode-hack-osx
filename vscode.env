JUST_PROJECT_PREFIX=VSCODE
JUST_VERSION="0.2.1+1dev"
if [ -z "${VSCODE_CWD+set}" ]; then
  VSCODE_CWD="$(\cd "$(\dirname "${BASH_SOURCE[0]}")"; \pwd)"
fi
: ${VSCODE_AUTO_ESCAPE=VSCODE_.*_DIR_DOCKER}

: ${VSCODE_DOCKER_REPO=andyneff/vscode}

: ${VSCODE_HOME=/home/user}
: ${VSCODE_USERNAME=$(id -u -n)}
: ${VSCODE_UID=$(id -u)}
: ${VSCODE_GIDS=$(id -G)}
: ${VSCODE_GID=${VSCODE_GIDS%% *}}
: ${VSCODE_GROUP_NAMES=$(group_names)}

# This directory is added to the container using the docker-compose file. This mechanism
# should only be used when the directory is guaranteed to exist
: ${VSCODE_SOURCE_DIR=${VSCODE_CWD}}
: ${VSCODE_SOURCE_DIR_DOCKER=/src}
: ${VSCODE_SOURCE_DIR_TYPE=bind}

: ${VSCODE_SSH_KEYS_DIR=ssh_keys}
: ${VSCODE_SSH_KEYS_DIR_DOCKER=/etc/ssh/keys}
: ${VSCODE_SSH_KEYS_DIR_TYPE=volume}

: ${VSCODE_DATA_DIR=/}
: ${VSCODE_DATA_DIR_DOCKER=/host}
: ${VSCODE_DATA_DIR_TYPE=bind}

: ${VSCODE_SINGULAR_COMPOSE_FILES=${VSCODE_CWD}/singular-compose.env}

: ${VSCODE_SSHD_PORT=4022}

# if [ -d /tmp/.X11-unix ]; then
#   VSCODE_VOLUMES=("/tmp/.X11-unix:/tmp/.X11-unix:ro"
#       ${VSCODE_VOLUMES+"${VSCODE_VOLUMES[@]}"})
# fi

# Example of a Dynamic Volume, that is created programatically instead
# always there. This directory is added to the container using VSCODE_VSCODE_VOLUMES.
# This mechanism is better when the directory doesn't exist, as the directory
# will be created and owned properly, unlike docker's default behavior
# : ${VSCODE_DATA_DIR=${VSCODE_SOURCE_DIR}/new-data}
# : ${VSCODE_DATA_DIR_DOCKER=/data}
# VSCODE_VSCODE_VOLUMES=(
#     "${VSCODE_DATA_DIR}:${VSCODE_DATA_DIR_DOCKER}"
#     ${VSCODE_VSCODE_VOLUMES+"${VSCODE_VSCODE_VOLUMES[@]}"})

###############################################################################
# Non-VSCODE Settings
###############################################################################

# Put variables that do not begin with VSCODE here.

: ${TZ=/usr/share/zoneinfo/UTC}

# Use this to add the user name to the docker-compose project name. This is
# important when multiple users are using this docker-compose project on a
# single host. This way all of the docker resources are prefixed with a unique
# name and do not collide
source "${VSI_COMMON_DIR}/linux/docker_functions.bsh" # define docker_compose_sanitize_project_name
: ${COMPOSE_PROJECT_NAME=$(docker_compose_sanitize_project_name "${VSCODE_CWD}" "${VSCODE_USERNAME}")}
